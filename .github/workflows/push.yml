name: Push

on:
  push:
    tags: ['ubuntu*']

env:
  DOCKER_IMAGE_USER: cyberryteam
  DOCKER_IMAGE_NAME: epitech-docker

jobs:

  docker:
    runs-on: [ubuntu-latest]

    strategy:
      matrix:
        packages:
          - "all"
          - "core"
          - "c"
          - "cpp"
          - "python"

    steps:
      - uses: actions/checkout@v2

      - uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get version
        id: version
        run: |
          git fetch --prune --tags --unshallow
          TAG="$(git describe --tags $(git rev-list --tags --max-count=1))"
          NAME="$(echo $TAG | grep -oP '^.+(?=-)')"
          MAJOR="$(echo $TAG | grep -oP '^.*?\d+')"
          MINOR="$(echo $TAG | grep -oP '^.*?\d+.\d+')"
          PACKAGES=$(if [ "${{ matrix.packages }}" != "all" ] ; then echo "-${{ matrix.packages }}" ; fi)
          PACKAGES=$(echo $PACKAGES | sed 'y/ /-/')
          echo "::set-output name=tag::$TAG"
          echo "::set-output name=name::$NAME"
          echo "::set-output name=major::$MAJOR"
          echo "::set-output name=minor::$MINOR"
          echo "::set-output name=packages::$PACKAGES"

      - name: Build
        run: |
          docker build . \
            -t $DOCKER_IMAGE_USER/$DOCKER_IMAGE_NAME:${{ steps.version.outputs.name }}${{ steps.version.outputs.packages }} \
            -t $DOCKER_IMAGE_USER/$DOCKER_IMAGE_NAME:${{ steps.version.outputs.major }}${{ steps.version.outputs.packages }} \
            -t $DOCKER_IMAGE_USER/$DOCKER_IMAGE_NAME:${{ steps.version.outputs.minor }}${{ steps.version.outputs.packages }} \
            -t $DOCKER_IMAGE_USER/$DOCKER_IMAGE_NAME:${{ steps.version.outputs.tag }}${{ steps.version.outputs.packages }} \
            --build-arg IMAGE_CREATION=$(date --iso-8601=seconds) \
            --build-arg IMAGE_VERSION=${{ steps.version.outputs.tag }}${{ steps.version.outputs.packages }} \
            --build-arg IMAGE_PACKAGES=${{ matrix.packages }}

      - name: Push
        run: |
          docker push $DOCKER_IMAGE_USER/$DOCKER_IMAGE_NAME
